openapi: 3.0.0
info:
  title: Authentication API
  description: API for user registration, verification, login, and password management
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://api.example.com
    description: Production server

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: |
        Register a new user with email and phone. Sends an OTP to the provided email for verification.
        Rate limited to 100 requests per 10 minutes.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                registrationData:
                  type: object
                  required:
                    - email
                    - phone
                    - password
                    - confirmPassword
                  properties:
                    email:
                      type: string
                      format: email
                      description: User's email address (disposable emails are not allowed)
                      example: user@example.com
                    phone:
                      type: string
                      description: User's phone number
                      example: "+1234567890"
                    password:
                      type: string
                      minLength: 6
                      description: User's password
                      example: "password123"
                    confirmPassword:
                      type: string
                      description: Password confirmation (must match password)
                      example: "password123"
            examples:
              valid_registration:
                summary: Valid registration data
                value:
                  registrationData:
                    email: "john.doe@example.com"
                    phone: "+1234567890"
                    password: "securePassword123"
                    confirmPassword: "securePassword123"
      responses:
        '201':
          description: User registered successfully, OTP sent to email
          content:
            text/plain:
              schema:
                type: string
                example: "OTP sent to your email"
        '400':
          description: Bad request - Invalid input or disposable email
          content:
            text/plain:
              schema:
                type: string
                examples:
                  disposable_email:
                    value: "Disposable email addresses are not allowed."
                  password_mismatch:
                    value: "Passwords do not match"
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: "Too many OTP requests. Please try again later."
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error message"

  /auth/verify-otp:
    post:
      tags:
        - Authentication
      summary: Verify email with OTP
      description: Verify user's email address using the OTP sent during registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                  example: user@example.com
                otp:
                  type: string
                  description: 6-digit OTP received via email
                  example: "123456"
            example:
              email: "john.doe@example.com"
              otp: "123456"
      responses:
        '200':
          description: Email verified successfully
          content:
            text/plain:
              schema:
                type: string
                example: "Email verified successfully"
        '400':
          description: Bad request - Invalid or expired OTP, or user already verified
          content:
            text/plain:
              schema:
                type: string
                examples:
                  invalid_otp:
                    value: "Invalid or expired OTP"
                  already_verified:
                    value: "User already verified"
        '404':
          description: User not found
          content:
            text/plain:
              schema:
                type: string
                example: "User not found"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error message"

  /auth/resend-otp:
    post:
      tags:
        - Authentication
      summary: Resend OTP for email verification
      description: Resend OTP to user's email for verification (only for unverified users)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                  example: user@example.com
            example:
              email: "john.doe@example.com"
      responses:
        '200':
          description: OTP resent successfully
          content:
            text/plain:
              schema:
                type: string
                example: "OTP resent"
        '400':
          description: Invalid request - User not found or already verified
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid request"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error message"

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and return access and refresh tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                  example: user@example.com
                password:
                  type: string
                  description: User's password
                  example: "password123"
            example:
              email: "john.doe@example.com"
              password: "securePassword123"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: JWT access token
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken:
                    type: string
                    description: JWT refresh token
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                example:
                  accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmI5YzNmNjE2ZjE4ZGM1N2RlNzEyYzciLCJlbWFpbCI6ImpvaG4uZG9lQGV4YW1wbGUuY29tIiwiaWF0IjoxNjU2MzQ1NjAwLCJleHAiOjE2NTYzNDkyMDB9.xyz"
                  refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmI5YzNmNjE2ZjE4ZGM1N2RlNzEyYzciLCJpYXQiOjE2NTYzNDU2MDAsImV4cCI6MTY1NzIwOTYwMH0.abc"
        '401':
          description: Unauthorized - Email not verified or user not found
          content:
            text/plain:
              schema:
                type: string
                example: "Email not verified or user not found"
        '403':
          description: Forbidden - Invalid credentials
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid credentials"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error message"

  /auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Request password reset
      description: Send OTP to user's email for password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                  example: user@example.com
            example:
              email: "john.doe@example.com"
      responses:
        '200':
          description: OTP sent for password reset
          content:
            text/plain:
              schema:
                type: string
                example: "OTP sent to your email"
        '404':
          description: User not found
          content:
            text/plain:
              schema:
                type: string
                example: "User not found"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error message"

  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset password with OTP
      description: Reset user's password using OTP received via email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
                - newPassword
                - confirmNewPassword
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                  example: user@example.com
                otp:
                  type: string
                  description: 6-digit OTP received via email
                  example: "123456"
                newPassword:
                  type: string
                  minLength: 6
                  description: New password
                  example: "newPassword123"
                confirmNewPassword:
                  type: string
                  description: Confirm new password (must match newPassword)
                  example: "newPassword123"
            example:
              email: "john.doe@example.com"
              otp: "123456"
              newPassword: "newSecurePassword123"
              confirmNewPassword: "newSecurePassword123"
      responses:
        '200':
          description: Password reset successful
          content:
            text/plain:
              schema:
                type: string
                example: "Password reset successful"
        '400':
          description: Bad request - Passwords don't match or invalid/expired OTP
          content:
            text/plain:
              schema:
                type: string
                examples:
                  password_mismatch:
                    value: "Passwords do not match"
                  invalid_otp:
                    value: "Invalid or expired OTP"
        '404':
          description: User not found
          content:
            text/plain:
              schema:
                type: string
                example: "User not found"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error message"

  /auth/refresh-token:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Generate new access and refresh tokens using a valid refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  description: Valid refresh token
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
            example:
              token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmI5YzNmNjE2ZjE4ZGM1N2RlNzEyYzciLCJpYXQiOjE2NTYzNDU2MDAsImV4cCI6MTY1NzIwOTYwMH0.abc"
      responses:
        '200':
          description: Tokens refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: New JWT access token
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken:
                    type: string
                    description: New JWT refresh token
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                example:
                  accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmI5YzNmNjE2ZjE4ZGM1N2RlNzEyYzciLCJlbWFpbCI6ImpvaG4uZG9lQGV4YW1wbGUuY29tIiwiaWF0IjoxNjU2MzQ1NjAwLCJleHAiOjE2NTYzNDkyMDB9.xyz"
                  refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmI5YzNmNjE2ZjE4ZGM1N2RlNzEyYzciLCJpYXQiOjE2NTYzNDU2MDAsImV4cCI6MTY1NzIwOTYwMH0.def"
        '401':
          description: Unauthorized - No token provided
        '403':
          description: Forbidden - Invalid refresh token
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid refresh token"

components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
          example: "Something went wrong"
    
    TokenPair:
      type: object
      properties:
        accessToken:
          type: string
          description: JWT access token for API authentication
        refreshToken:
          type: string
          description: JWT refresh token for obtaining new access tokens
    
    RegistrationData:
      type: object
      required:
        - email
        - phone
        - password
        - confirmPassword
      properties:
        email:
          type: string
          format: email
          description: User's email address
        phone:
          type: string
          description: User's phone number
        password:
          type: string
          minLength: 6
          description: User's password
        confirmPassword:
          type: string
          description: Password confirmation

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Authentication
    description: User authentication and account management endpoints